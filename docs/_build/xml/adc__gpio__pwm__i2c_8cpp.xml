<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="adc__gpio__pwm__i2c_8cpp" kind="file" language="C++">
    <compoundname>adc_gpio_pwm_i2c.cpp</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes refid="pwm_8h" local="no">esp32/pwm.h</includes>
    <includes refid="gpio_8h" local="no">esp32/gpio.h</includes>
    <includes local="yes">Wire.h</includes>
    <includes local="yes">I2Cdev.h</includes>
    <includes local="yes">ADXL345.h</includes>
    <incdepgraph>
      <node id="7">
        <label>ADXL345.h</label>
      </node>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="4">
        <label>esp32/gpio.h</label>
        <link refid="gpio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>esp32/pwm.h</label>
        <link refid="pwm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp</label>
        <link refid="adc__gpio__pwm__i2c_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>I2Cdev.h</label>
      </node>
      <node id="5">
        <label>Wire.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1a5e17f11253e93acc3c2a877894cb2d77" prot="public" static="no" mutable="no">
        <type>ADXL345</type>
        <definition>ADXL345 accel</definition>
        <argsstring></argsstring>
        <name>accel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="18" column="9" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1aebedd0a48fe876cce3d3f14326e4ca66" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t ax</definition>
        <argsstring></argsstring>
        <name>ax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="19" column="9" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1a46d26903f1874d06875a974dfa1a9d3c" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t ay</definition>
        <argsstring></argsstring>
        <name>ay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="19" column="12" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1a41e60f9324f9d4fd9e916e964370fb2f" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t az</definition>
        <argsstring></argsstring>
        <name>az</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="19" column="15" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1a1eef257368770fad6894b693ba0ccb51" prot="public" static="no" mutable="no">
        <type><ref refid="class_d_i_o" kindref="compound">DIO</ref></type>
        <definition>DIO ledG1(32, OUTPUT)</definition>
        <argsstring>(32, OUTPUT)</argsstring>
        <name>ledG1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="21" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1a876ff9aabff0cb5fd911814c71edd4fd" prot="public" static="no" mutable="no">
        <type><ref refid="class_a_i" kindref="compound">AI</ref></type>
        <definition>AI poti(14)</definition>
        <argsstring>(14)</argsstring>
        <name>poti</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="22" column="4"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1a2cd9f0d96c9cd0637798de3baa7aee60" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ledPin</definition>
        <argsstring></argsstring>
        <name>ledPin</name>
        <initializer>= 25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="25" column="11" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1ad730376c68b5ab8fccb31a5266657bf5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ledPin2</definition>
        <argsstring></argsstring>
        <name>ledPin2</name>
        <initializer>= 26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="26" column="11" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1a2dce285eeeb99dff1af9729566ed80e0" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ledPin3</definition>
        <argsstring></argsstring>
        <name>ledPin3</name>
        <initializer>= 27</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="27" column="11" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1a323a9f2cf2eeae7e0acd9fe48da80fff" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int freq</definition>
        <argsstring></argsstring>
        <name>freq</name>
        <initializer>= 5000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="30" column="11" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1a5bf8a40c83e5abee86f09b6e49ddcdc3" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int ledChannel</definition>
        <argsstring></argsstring>
        <name>ledChannel</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="31" column="11" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1a3f31ec61b48ff621facda746f143c34c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int resolution</definition>
        <argsstring></argsstring>
        <name>resolution</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="32" column="11" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="adc__gpio__pwm__i2c_8cpp_1a198e8e7f98d16bf75d6ce8478555b37f" prot="public" static="no" mutable="no">
        <type><ref refid="class_p_w_m" kindref="compound">PWM</ref></type>
        <definition>PWM pwm(ledChannel, freq, resolution)</definition>
        <argsstring>(ledChannel, freq, resolution)</argsstring>
        <name>pwm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="34" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="adc__gpio__pwm__i2c_8cpp_1af4ff73ecc077819902ccc73c459a529f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initAccel</definition>
        <argsstring>()</argsstring>
        <name>initAccel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="36" column="6" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="36" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="adc__gpio__pwm__i2c_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="44" column="6" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="44" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="adc__gpio__pwm__i2c_8cpp_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" line="63" column="6" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp" bodystart="63" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>TODO::</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I2C<sp/>has<sp/>to<sp/>be<sp/>further<sp/>inspected!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>I2C<sp/>Devlib<sp/>is<sp/>a<sp/>great<sp/>collection<sp/>for<sp/>different<sp/>sensor<sp/>with<sp/>unified<sp/>I2C<sp/>library<sp/>to<sp/>communicaty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>that<sp/>fast<sp/>adapter<sp/>classes<sp/>for<sp/>each<sp/>device<sp/>can<sp/>be<sp/>written<sp/>and<sp/>included<sp/>into<sp/>an<sp/>experiment<sp/>module<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="pwm_8h" kindref="compound">esp32/pwm.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gpio_8h" kindref="compound">esp32/gpio.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Wire.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I2Cdev<sp/>and<sp/>ADXL345<sp/>must<sp/>be<sp/>installed<sp/>as<sp/>libraries,<sp/>or<sp/>else<sp/>the<sp/>.cpp/.h<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>both<sp/>classes<sp/>must<sp/>be<sp/>in<sp/>the<sp/>include<sp/>path<sp/>of<sp/>your<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;I2Cdev.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ADXL345.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>default<sp/>I2C<sp/>address<sp/>is<sp/>0x5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">ADXL345<sp/>accel;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">int16_t<sp/>ax,<sp/>ay,<sp/>az;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="class_d_i_o" kindref="compound">DIO</ref><sp/>ledG1(32,OUTPUT);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="class_a_i" kindref="compound">AI</ref><sp/>poti(14);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ledPin<sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ledPin2<sp/>=<sp/>26;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ledPin3<sp/>=<sp/>27;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PWM<sp/>channel<sp/>0<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>5000;<sp/></highlight><highlight class="comment">//<sp/>5000<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ledChannel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution<sp/>=<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>8-bit<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="class_p_w_m" kindref="compound">PWM</ref><sp/>pwm(ledChannel,freq,resolution);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initAccel(){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;init<sp/>i2c<sp/>devices&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>accel.initialize();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verify<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Testing<sp/>device<sp/>connections...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(accel.testConnection()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;ADXL345<sp/>connection<sp/>successful&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;ADXL345<sp/>connection<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup(){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>join<sp/>UART<sp/>Bus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.begin(115200);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>join<sp/>I2C<sp/>bus<sp/>(I2Cdev<sp/>library<sp/>doesn&apos;t<sp/>do<sp/>this<sp/>automatically)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>Wire.begin();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initAccel();<sp/>//<sp/>curently<sp/>not<sp/>tested,<sp/>Accel<sp/>is<sp/>found<sp/>with<sp/>adress<sp/>0x53<sp/>but<sp/>no<sp/>further<sp/>communication<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PWM<sp/>-<sp/>SETUP<sp/>channel<sp/>with<sp/>given<sp/>freq<sp/>and<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>pwm.init();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attach<sp/>the<sp/>channel<sp/>0<sp/>on<sp/>the<sp/>3<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>pwm.<ref refid="class_p_w_m_1a821f233640f30489bdd08040d07f0de3" kindref="member">attachPin</ref>(ledPin);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>pwm.<ref refid="class_p_w_m_1a821f233640f30489bdd08040d07f0de3" kindref="member">attachPin</ref>(ledPin2);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>pwm.<ref refid="class_p_w_m_1a821f233640f30489bdd08040d07f0de3" kindref="member">attachPin</ref>(ledPin3);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loop(){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>the<sp/>brightness<sp/>of<sp/>the<sp/>led<sp/>in<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>iDuty<sp/>=<sp/>(uint8_t)<sp/>(((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>poti.<ref refid="class_a_i_1af16068eacbfcc20282b98ca6ca61d0df" kindref="member">get</ref>()/4096.0<sp/>)<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>pwm.write(iDuty);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>ledG1.<ref refid="class_d_i_o_1a727bcda55147f93d2c6b5f0e2d3a561f" kindref="member">toggle</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>raw<sp/>accel<sp/>measurements<sp/>from<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>accel.getAcceleration(&amp;ax,<sp/>&amp;ay,<sp/>&amp;az);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>display<sp/>tab-separated<sp/>accel<sp/>x/y/z<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;accel:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(ax);<sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(ay);<sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(az);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(100);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp"/>
  </compounddef>
</doxygen>
