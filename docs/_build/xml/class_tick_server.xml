<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_tick_server" kind="class" language="C++" prot="public">
    <compoundname>TickServer</compoundname>
    <includes refid="_tick_8h" local="no">Tick.h</includes>
    <innerclass refid="struct_tick_server_1_1_client" prot="protected">TickServer::Client</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_tick_server_1ad4e2b9dc87157be1c8fd2f0ba30d9657" prot="private" static="yes" mutable="no">
        <type><ref refid="class_tick_server" kindref="compound">TickServer</ref> *</type>
        <definition>TickServer* TickServer::pThis</definition>
        <argsstring></argsstring>
        <name>pThis</name>
        <qualifiedname>TickServer::pThis</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" line="29" column="30" bodyfile="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_tick_server_1af2ea0ac560659ca0a0a07403c1f3fa47" prot="protected" static="no" mutable="no">
        <type><ref refid="class_dynamic_array" kindref="compound">DynamicArray</ref>&lt; struct <ref refid="struct_tick_server_1_1_client" kindref="compound">Client</ref> &gt;</type>
        <definition>DynamicArray&lt;struct Client&gt; TickServer::clients</definition>
        <argsstring></argsstring>
        <name>clients</name>
        <qualifiedname>TickServer::clients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" line="62" column="18" bodyfile="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tick_server_1aaa8ad14d0170d2f9324d69d8f9f31341" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t TickServer::millis</definition>
        <argsstring></argsstring>
        <name>millis</name>
        <qualifiedname>TickServer::millis</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" line="63" column="14" bodyfile="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_tick_server_1aaf0c23d9cd51f098c0ecac1a1572936f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tick_server" kindref="compound">TickServer</ref> *</type>
        <definition>static TickServer * TickServer::server</definition>
        <argsstring>()</argsstring>
        <name>server</name>
        <qualifiedname>TickServer::server</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" line="31" column="23" bodyfile="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" bodystart="31" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_tick_server_1a06b6745f0fbe6e9466189d03367bf55a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TickServer::TickServer</definition>
        <argsstring>()</argsstring>
        <name>TickServer</name>
        <qualifiedname>TickServer::TickServer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" line="38" column="5" bodyfile="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" bodystart="38" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_tick_server_1a8114c2592502caa0081b1bd07ed76a9e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool TickServer::registerClient</definition>
        <argsstring>(TickClient *client, uint32_t ms)</argsstring>
        <name>registerClient</name>
        <qualifiedname>TickServer::registerClient</qualifiedname>
        <param>
          <type><ref refid="class_tick_client" kindref="compound">TickClient</ref> *</type>
          <declname>client</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method must be called initially by tick client. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to client </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Tick request time in ms </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" line="46" column="17" bodyfile="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_tick_server_1a88eb9aa21bacbee6ef8b85c0d65bf8c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TickServer::msCall</definition>
        <argsstring>(uint32_t dT)</argsstring>
        <name>msCall</name>
        <qualifiedname>TickServer::msCall</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>dT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>process connected <ref refid="class_tick_client" kindref="compound">TickClient</ref> clients</para>
<para>method must be called cyclically <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dT</parametername>
</parameternamelist>
<parameterdescription>
<para>time difference in ms since last call </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" line="71" column="17" bodyfile="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" bodystart="71" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class describing a tick server to a <ref refid="class_tick_client" kindref="compound">TickClient</ref>. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>DynamicArray&lt; struct TickServer::Client &gt;</label>
        <link refid="class_dynamic_array"/>
      </node>
      <node id="1">
        <label>TickServer</label>
        <link refid="class_tick_server"/>
        <childnode refid="2" relation="usage">
          <edgelabel>clients</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" line="27" column="1" bodyfile="d:/git/fertigung/lucy-esp/software/microcontroller/include/utils/Tick.h" bodystart="27" bodyend="82"/>
    <listofallmembers>
      <member refid="class_tick_server_1af2ea0ac560659ca0a0a07403c1f3fa47" prot="protected" virt="non-virtual"><scope>TickServer</scope><name>clients</name></member>
      <member refid="class_tick_server_1aaa8ad14d0170d2f9324d69d8f9f31341" prot="protected" virt="non-virtual"><scope>TickServer</scope><name>millis</name></member>
      <member refid="class_tick_server_1a88eb9aa21bacbee6ef8b85c0d65bf8c5" prot="public" virt="non-virtual"><scope>TickServer</scope><name>msCall</name></member>
      <member refid="class_tick_server_1ad4e2b9dc87157be1c8fd2f0ba30d9657" prot="private" virt="non-virtual"><scope>TickServer</scope><name>pThis</name></member>
      <member refid="class_tick_server_1a8114c2592502caa0081b1bd07ed76a9e" prot="public" virt="non-virtual"><scope>TickServer</scope><name>registerClient</name></member>
      <member refid="class_tick_server_1aaf0c23d9cd51f098c0ecac1a1572936f" prot="private" virt="non-virtual"><scope>TickServer</scope><name>server</name></member>
      <member refid="class_tick_server_1a06b6745f0fbe6e9466189d03367bf55a" prot="private" virt="non-virtual"><scope>TickServer</scope><name>TickServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
