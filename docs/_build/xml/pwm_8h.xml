<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="pwm_8h" kind="file" language="C++">
    <compoundname>pwm.h</compoundname>
    <includes local="yes">Arduino.h</includes>
    <includedby refid="_valve_driver_8h" local="no">D:/git/fertigung/lucy-esp/software/microcontroller/include/ValveDriver.h</includedby>
    <includedby refid="main_8cpp" local="no">D:/git/fertigung/lucy-esp/software/microcontroller/src/main.cpp</includedby>
    <includedby refid="adc__gpio__pwm__i2c_8cpp" local="no">D:/git/fertigung/lucy-esp/software/microcontroller/test/adc_gpio_pwm_i2c.cpp</includedby>
    <includedby refid="pwm_8cpp" local="no">D:/git/fertigung/lucy-esp/software/microcontroller/test/pwm.cpp</includedby>
    <includedby refid="timer_8cpp" local="no">D:/git/fertigung/lucy-esp/software/microcontroller/test/timer.cpp</includedby>
    <includedby refid="transport__min__exp_modules_8cpp" local="no">D:/git/fertigung/lucy-esp/software/microcontroller/test/transport_min_expModules.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>D:/git/fertigung/lucy-esp/software/microcontroller/include/esp32/pwm.h</label>
        <link refid="pwm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>D:/git/fertigung/lucy-esp/software/microcontroller/include/Controller.h</label>
        <link refid="_controller_8h_source"/>
      </node>
      <node id="4">
        <label>D:/git/fertigung/lucy-esp/software/microcontroller/include/Lucy.h</label>
        <link refid="_lucy_8h"/>
      </node>
      <node id="2">
        <label>D:/git/fertigung/lucy-esp/software/microcontroller/include/ValveDriver.h</label>
        <link refid="_valve_driver_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/git/fertigung/lucy-esp/software/microcontroller/include/esp32/pwm.h</label>
        <link refid="pwm_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>D:/git/fertigung/lucy-esp/software/microcontroller/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_p_w_m" prot="public">PWM</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pwm_8h_1a4d470b5e496cf945242ce8e5a6aecc97" prot="public" static="no">
        <name>ESP32_PWM_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/git/fertigung/lucy-esp/software/microcontroller/include/esp32/pwm.h" line="7" column="9" bodyfile="D:/git/fertigung/lucy-esp/software/microcontroller/include/esp32/pwm.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ESP32_PMW_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ESP32_PWM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>todo<sp/>think<sp/>about<sp/>adding<sp/>security<sp/>or<sp/>splitting<sp/>into<sp/>led<sp/>channels<sp/>and<sp/>then<sp/>&quot;PWM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>/<sp/>GPIO<sp/>Class<sp/>as<sp/>output<sp/>only&quot;<sp/>namensgebung</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_p_w_m" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_p_w_m" kindref="compound">PWM</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="class_p_w_m" kindref="compound">PWM</ref>(){};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="class_p_w_m" kindref="compound">PWM</ref>(uint8_t<sp/>channel,<sp/>uint16_t<sp/>frequency,<sp/>uint8_t<sp/>resolution<sp/>=<sp/>8)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>channel(channel),<sp/>frequency(frequency),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolution(resolution)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="class_p_w_m" kindref="compound">~PWM</ref>(){};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init(){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>ledcSetup(this-&gt;channel,<sp/>this-&gt;frequency,<sp/>this-&gt;resolution);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_p_w_m_1af66606fd29070ee4a009b26fc461a38e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_w_m_1af66606fd29070ee4a009b26fc461a38e" kindref="member">set</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>duty)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>ledcWrite(this-&gt;channel,<sp/>duty);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_p_w_m_1a77313d48ed9948d56e6a66fa6edb5e7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_w_m_1a77313d48ed9948d56e6a66fa6edb5e7c" kindref="member">setFrequency</ref>(uint16_t<sp/>frequency)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;frequency<sp/>=<sp/>frequency;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>ledcChangeFrequency(this-&gt;channel,<sp/>this-&gt;frequency,<sp/>this-&gt;resolution);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_p_w_m_1a57a0062e25ce97ef7d380e6b5391a6ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_w_m_1a57a0062e25ce97ef7d380e6b5391a6ce" kindref="member">setResolution</ref>(uint32_t<sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;resolution<sp/>=<sp/>resolution;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ledcChangeFrequency(this-&gt;channel,<sp/>this-&gt;frequency,<sp/>this-&gt;resolution);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_p_w_m_1a3986ddacd733c0850c6d4ef8ac31e141" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="class_p_w_m_1a3986ddacd733c0850c6d4ef8ac31e141" kindref="member">getFrequency</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;frequency;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_p_w_m_1aec6a3c754b65dd81fcc80768093ef878" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="class_p_w_m_1aec6a3c754b65dd81fcc80768093ef878" kindref="member">getResolution</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;resolution;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_p_w_m_1a67c5c054e4cb65744abff00a6655bcff" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="class_p_w_m_1a67c5c054e4cb65744abff00a6655bcff" kindref="member">getChannel</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;channel;<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_p_w_m_1ac55c5446376eb306212f8d4d4c9ea4c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_w_m_1ac55c5446376eb306212f8d4d4c9ea4c7" kindref="member">detatchPin</ref>(uint8_t<sp/>iPin)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ledcDetachPin(iPin);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Todo<sp/>::<sp/>add<sp/>method<sp/>to<sp/>search<sp/>in<sp/>Dynamic<sp/>Array<sp/>for<sp/>key<sp/>and<sp/>retunr<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_p_w_m_1a821f233640f30489bdd08040d07f0de3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_p_w_m_1a821f233640f30489bdd08040d07f0de3" kindref="member">attachPin</ref>(uint8_t<sp/>iPin)<sp/>{<sp/>ledcAttachPin(iPin,this-&gt;channel);<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_p_w_m_1a229ff9e8dd725ad8e2f036c06f2731f1" refkind="member"><highlight class="normal"><sp/><sp/>String<sp/><ref refid="class_p_w_m_1a229ff9e8dd725ad8e2f036c06f2731f1" kindref="member">print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;[PWM]<sp/>-<sp/>channel<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(this-&gt;channel)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>frequency<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String(this-&gt;frequency)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>resolution<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String(this-&gt;resolution);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>uint8_t<sp/>channel;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>uint16_t<sp/>frequency;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>uint8_t<sp/>resolution;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//ESP32_PWM_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/git/fertigung/lucy-esp/software/microcontroller/include/esp32/pwm.h"/>
  </compounddef>
</doxygen>
