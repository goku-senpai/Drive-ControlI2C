<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_simulated_encoder_8cpp" kind="file" language="C++">
    <compoundname>SimulatedEncoder.cpp</compoundname>
    <includes refid="_simulated_encoder_8h" local="yes">SimulatedEncoder.h</includes>
    <incdepgraph>
      <node id="2">
        <label>SimulatedEncoder.h</label>
        <link refid="_simulated_encoder_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/Palan/Documents/CODE/UMIT_communication_setup/UartCommunication/Core/Src/SimulatedEncoder.cpp</label>
        <link refid="_simulated_encoder_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;SimulatedEncoder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">SimulatedEncoder::SimulatedEncoder(int32_t<sp/>initialCount)<sp/>:<sp/>count(initialCount)<sp/>{}</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simulate<sp/>incrementing<sp/>the<sp/>count<sp/>as<sp/>if<sp/>the<sp/>encoder<sp/>were<sp/>rotating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SimulatedEncoder::simulateRotation(int32_t<sp/>increment)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>increment;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>count<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">int32_t<sp/>SimulatedEncoder::get_count()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>count<sp/>to<sp/>a<sp/>specific<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SimulatedEncoder::reset_count(int32_t<sp/>newValue)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>newValue;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simulate<sp/>getting<sp/>the<sp/>position<sp/>based<sp/>on<sp/>count<sp/>and<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>SimulatedEncoder::simulateGetPosition(int32_t<sp/>resolution)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(count)<sp/>/<sp/>resolution;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Palan/Documents/CODE/UMIT_communication_setup/UartCommunication/Core/Src/SimulatedEncoder.cpp"/>
  </compounddef>
</doxygen>
